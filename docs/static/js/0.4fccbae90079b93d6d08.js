webpackJsonp([0],{"/AZn":function(n,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i={render:function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"content"},[n._m(0),n._v(" "),e("h1",[n._v("光标移动")]),n._v(" "),e("p",[n._v("h 光标左移，同 "),e("Left",[n._v(" 键\nj 光标下移，同 "),e("Down",[n._v(" 键\nk 光标上移，同 "),e("Up",[n._v(" 键\nl 光标右移，同 "),e("Right",[n._v(" 键\nCTRL-F 下一页\nCTRL-B 上一页\nCTRL-U 上移半屏\nCTRL-D 下移半屏\n0 跳到行首（是数字零，不是字母 O），效用等同于 "),e("Home",[n._v(" 键\n^ 跳到从行首开始第一个非空白字符\n$ 跳到行尾，效用等同于 "),e("End",[n._v(" 键\ngg 跳到第一行，效用等同于 CTRL+"),e("Home",[n._v("\nG 跳到最后一行，效用等同于 CTRL+"),e("End",[n._v("\nnG 跳到第 n 行，比如 10G 是移动到第十行\n:n 跳到第 n 行，比如 :10<回车> 是移动到第十行\n10% 移动到文件 10% 处\n15| 移动到当前行的 15 列\nw 跳到下一个单词开头 (word: 标点或空格分隔的单词)\nW 跳到下一个单词开头 (WORD: 空格分隔的单词)\ne 跳到下一个单词尾部 (word: 标点或空格分隔的单词)\nE 跳到下一个单词尾部 (WORD: 空格分隔的单词)\nb 上一个单词头 (word: 标点或空格分隔的单词)\nB 上一个单词头 (WORD: 空格分隔的单词)\nge 上一个单词尾\n) 向前移动一个句子（句号分隔）\n( 向后移动一个句子（句号分隔）\n} 向前移动一个段落（空行分隔）\n{ 向后移动一个段落（空行分隔）\n"),e("enter",[n._v(" 移动到下一行首个非空字符")])],1)],1)],1)],1)],1)],1)],1)],1)],1),n._v(" "),n._m(1),n._v(" "),e("ul",[e("li",[n._m(2),n._v("\nH 移动到屏幕上部\nM 移动到屏幕中部\nL 移动到屏幕下部\nfx 跳转到下一个为 x 的字符，2f/ 可以找到第二个斜杆\nFx 跳转到上一个为 x 的字符\ntx 跳转到下一个为 x 的字符前\nTx 跳转到上一个为 x 的字符前\n; 跳到下一个 f/t 搜索的结果\n, 跳到上一个 f/t 搜索的结果\n"),e("S-Left",[n._v(" 按住 SHIFT 按左键，向左移动一个单词\n"),e("S-Right",[n._v(" 按住 SHIFT 按右键，向右移动一个单词\n"),e("S-Up",[n._v(" 按住 SHIFT 按上键，向上翻页\n"),e("S-Down",[n._v(" 按住 SHIFT 按下键，向下翻页\ngm 移动到行中\ngj 光标下移一行（忽略自动换行）\ngk 光标上移一行（忽略自动换行）")])],1)],1)],1)],1)]),n._v(" "),e("h1",[n._v("插入模式：进入退出")]),n._v(" "),e("p",[n._v("i 在光标处进入插入模式\nI 在行首进入插入模式\na 在光标后进入插入模式\nA 在行尾进入插入模式\no 在下一行插入新行并进入插入模式\nO 在上一行插入新行并进入插入模式\ngi 进入到上一次插入模式的位置\n"),e("ESC",[n._v(" 退出插入模式\nCTRL-[ 退出插入模式（同 ESC 等价，但更顺手）")])],1),n._v(" "),e("h1",[n._v("INSERT MODE - 由 i, I, a, A, o, O 等命令进入插入模式后")]),n._v(" "),e("p",[e("Up",[n._v(" 光标向上移动\n"),e("Down",[n._v(" 光标向下移动\n"),e("Left",[n._v(" 光标向左移动\n"),e("Right",[n._v(" 光标向右移动\n"),e("S-Left",[n._v(" 按住 SHIFT 按左键，向左移动一个单词\n"),e("S-Right",[n._v(" 按住 SHIFT 按右键，向右移动一个单词\n"),e("S-Up",[n._v(" 按住 SHIFT 按上键，向上翻页\n"),e("S-Down",[n._v(" 按住 SHIFT 按下键，向下翻页\n"),e("PageUp",[n._v(" 上翻页\n"),e("PageDown",[n._v(" 下翻页\n"),e("Delete",[n._v(" 删除光标处字符\n"),e("BS",[n._v(" Backspace 向后删除字符\n"),e("Home",[n._v(" 光标跳转行首\n"),e("End",[n._v(' 光标跳转行尾\nCTRL-W 向后删除单词\nCTRL-O 临时退出插入模式，执行单条命令又返回插入模式\nCTRL-\\ CTRL-O 临时退出插入模式（光标保持），执行单条命令又返回插入模式\nCTRL-R 0 插入寄存器（内部 0 号剪贴板）内容，CTRL-R 后可跟寄存器名\nCTRL-R " 插入匿名寄存器内容，相当于插入模式下 p 粘贴\nCTRL-R = 插入表达式计算结果，等号后面跟表达式\nCTRL-R : 插入上一次命令行命令\nCTRL-R / 插入上一次搜索的关键字\nCTRL-F 自动缩进\nCTRL-U 删除当前行所有字符\nCTRL-V {char} 插入非数字的字面量\nCTRL-V {number} 插入三个数字代表的 ascii/unicode 字符\nCTRL-V 065 插入 10 进制 ascii 字符（两数字） 065 即 A 字符\nCTRL-V x41 插入 16 进制 ascii 字符（三数字） x41 即 A 字符\nCTRL-V o101 插入 8 进制 ascii 字符（三数字） o101 即 A 字符\nCTRL-V u1234 插入 16 进制 unicode 字符（四数字）\nCTRL-V U12345678 插入 16 进制 unicode 字符（八数字）\nCTRL-K {ch1} {ch2} 插入 digraph（见 :h digraph），快速输入日文或符号等')])],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1)],1),n._v(" "),e("h1",[n._v("文本编辑")]),n._v(" "),e("p",[n._v("r 替换当前字符\nR 进入替换模式，直至 ESC 离开\ns 替换字符（删除光标处字符，并进入插入模式，前可接数量）\nS 替换行（删除当前行，并进入插入模式，前可接数量）\ncc 改写当前行（删除当前行并进入插入模式），同 S\ncw 改写光标开始处的当前单词\nciw 改写光标所处的单词\ncaw 改写光标所处的单词，并且包括前后空格（如果有的话）\nc0 改写到行首\nc^ 改写到行首（第一个非零字符）\nc$ 改写到行末\nC 改写到行尾（同 c$）\nci\" 改写双引号中的内容\nci' 改写单引号中的内容\ncib 改写小括号中的内容\ncab 改写小括号中的内容（包含小括号本身）\nci) 改写小括号中的内容\nci] 改写中括号中内容\nciB 改写大括号中内容\ncaB 改写大括号中的内容（包含大括号本身）\nci} 改写大括号中内容\ncit 改写 xml tag 中的内容\ncis 改写当前句子\nc2w 改写下两个单词\nct( 改写到小括号前\nx 删除当前字符，前面可以接数字，3x 代表删除三个字符\nX 向前删除字符\ndd 删除当前行\nd0 删除到行首\nd^ 删除到行首（第一个非零字符）\nd$ 删除到行末\nD 删除到行末（同 d$）\ndw 删除当前单词\ndiw 删除光标所处的单词\ndaw 删除光标所处的单词，并包含前后空格（如果有的话）\ndi\" 删除双引号中的内容\ndi' 删除单引号中的内容\ndib 删除小括号中的内容\ndi) 删除小括号中的内容\ndab 删除小括号内的内容（包含小括号本身）\ndi] 删除中括号中内容\ndiB 删除大括号中内容\ndi} 删除大括号中内容\ndaB 删除大括号内的内容（包含大括号本身）\ndit 删除 xml tag 中的内容\ndis 删除当前句子\nd2w 删除下两个单词\ndt( 删除到小括号前\ndgg 删除到文件头部\ndG 删除到文件尾部\nd} 删除下一段\nd{ 删除上一段\nu 撤销\nU 撤销整行操作\nCTRL-R 撤销上一次 u 命令\nJ 链接多行为一行\n. 重复上一次操作\n~ 替换大小写\ng~iw 替换当前单词的大小写\ngUiw 将单词转成大写\nguiw 将当前单词转成小写\nguu 全行转为小写\ngUU 全行转为大写\n<< 减少缩进")]),n._v(" "),n._m(3),n._v(" "),e("h1",[n._v("复制粘贴")]),n._v(" "),e("p",[n._v('p 粘贴到光标后\nP 粘贴到光标前\nv 开始标记\ny 复制标记内容\nV 开始按行标记\nCTRL-V 开始列标记\ny$ 复制当前位置到本行结束的内容\nyy 复制当前行\nY 复制当前行，同 yy\nyiw 复制当前单词\n3yy 复制光标下三行内容\nv0 选中当前位置到行首\nv$ 选中当前位置到行末\nviw 选中当前单词\nvib 选中小括号内的东西\nvi) 选中小括号内的东西\nvi] 选中中括号内的东西\nviB 选中大括号内的东西\nvi} 选中大括号内的东西\nvis 选中句子中的东西\nvab 选中小括号内的东西（包含小括号本身）\nva) 选中小括号内的东西（包含小括号本身）\nva] 选中中括号内的东西（包含中括号本身）\nvaB 选中大括号内的东西（包含大括号本身）\nva} 选中大括号内的东西（包含大括号本身）\ngv 重新选择上一次选中的文字\n:set paste 允许粘贴模式（避免粘贴时自动缩进影响格式）\n:set nopaste 禁止粘贴模式\n"?yy 复制当前行到寄存器 ? ，问号代表 0-9 的寄存器名称\n"?p 将寄存器 ? 的内容粘贴到光标后\n"?P 将寄存器 ? 的内容粘贴到光标前\n:registers 显示所有寄存器内容\n:[range]y 复制范围，比如 :20,30y 是复制 20 到 30 行，:10y 是复制第十行\n:[range]d 删除范围，比如 :20,30d 是删除 20 到 30 行，:10d 是删除第十行\nddp 交换两行内容：先删除当前行复制到寄存器，并粘贴')]),n._v(" "),e("h1",[n._v("文本对象 - c,d,v,y 等命令后接文本对象，一般为：<范围 i/a><类型>")]),n._v(" "),e("p",[n._v("$ 到行末\n0 到行首\n^ 到行首非空字符\ntx 光标位置到字符 x 之前\nfx 光标位置到字符 x 之处\niw 整个单词（不包括分隔符）\naw 整个单词（包括分隔符）\niW 整个 WORD（不包括分隔符）\naW 整个 WORD（包括分隔符）\nis 整个句子（不包括分隔符）\nib 小括号内\nab 小括号内（包含小括号本身）\niB 大括号内\naB 大括号内（包含大括号本身）\ni) 小括号内\na) 小括号内（包含小括号本身）\ni] 中括号内\na] 中括号内（包含中括号本身）\ni} 大括号内\na} 大括号内（包含大括号本身）\ni' 单引号内\na' 单引号内（包含单引号本身）\ni\" 双引号内\na\" 双引号内（包含双引号本身）\n2i) 往外两层小括号内\n2a) 往外两层小括号内（包含小括号本身）\n2f) 到第二个小括号处\n2t) 到第二个小括号前")]),n._v(" "),e("h1",[n._v("查找替换")]),n._v(" "),e("p",[n._v("/pattern 从光标处向文件尾搜索 pattern\n?pattern 从光标处向文件头搜索 pattern\nn 向同一方向执行上一次搜索\nN 向相反方向执行上一次搜索")]),n._v(" "),n._m(4),n._v(" "),e("h1",[n._v("向后搜索光标下的单词")]),n._v(" "),e("p",[n._v("😒/p1/p2/g 将当前行中全替换 p1 为 p2\n:%s/p1/p2/g 将当前文件中全替换 p1 为 p2\n:%s/p1/p2/gc 将当前文件中全替换 p1 为 p2，并且每处询问你是否替换\n:10,20s/p1/p2/g 将第 10 到 20 行中所有 p1 替换为 p2\n:%s/1\\2/3/123/g 将“1\\2/3” 替换为 “123”（特殊字符使用反斜杠标注）\n:%s/\\r//g 删除 DOS 换行符 ^M")]),n._v(" "),e("h1",[n._v("VISUAL MODE - 由 v, V, CTRL-V 进入的可视模式")]),n._v(" "),e("blockquote",[n._m(5),n._v(" "),e("p",[n._v("< 减少缩进\nd 删除高亮选中的文字\nx 删除高亮选中的文字\nc 改写文字，即删除高亮选中的文字并进入插入模式\ns 改写文字，即删除高亮选中的文字并进入插入模式\ny 拷贝文字\n~ 转换大小写\no 跳转到标记区的另外一端\nO 跳转到标记块的另外一端\nu 标记区转换为小写\nU 标记区转换为大写\ng CTRL-G 显示所选择区域的统计信息\n"),e("Esc",[n._v(" 退出可视模式")])],1)]),n._v(" "),e("h1",[n._v("位置跳转")]),n._v(" "),e("p",[n._v("CTRL-O 跳转到上一个位置\nCTRL-I 跳转到下一个位置\nCTRL-^ 跳转到 alternate file (当前窗口的上一个文件）\n% 跳转到 {} () [] 的匹配\ngd 跳转到局部定义（光标下的单词的定义）\ngD 跳转到全局定义（光标下的单词的定义）\ngf 打开名称为光标下文件名的文件\n[[ 跳转到上一个顶层函数（比如 C 语言以大括号分隔）\n]] 跳转到下一个顶层函数（比如 C 语言以大括号分隔）\n[m 跳转到上一个成员函数\n]m 跳转到下一个成员函数\n[{ 跳转到上一处未匹配的 {\n]} 跳转到下一处未匹配的 }\n[( 跳转到上一处未匹配的 (\n]) 跳转到下一处未匹配的 )\n[c 上一个不同处（diff 时）\n]c 下一个不同处（diff 时）\n[/ 跳转到 C 注释开头\n]/ 跳转到 C 注释结尾\n`` 回到上次跳转的位置\n'' 回到上次跳转的位置\n`. 回到上次编辑的位置\n'. 回到上次编辑的位置")]),n._v(" "),e("h1",[n._v("文件操作")]),n._v(" "),e("p",[n._v(":w 保存文件\n:w "),e("filename",[n._v(" 按名称保存文件\n:e "),e("filename",[n._v(" 打开文件并编辑\n:saveas "),e("filename",[n._v(" 另存为文件\n:r "),e("filename",[n._v(" 读取文件并将内容插入到光标后\n:r !dir 将 dir 命令的输出捕获并插入到光标后\n:close 关闭文件\n:q 退出\n:q! 强制退出\n:wa 保存所有文件\n:cd "),e("path",[n._v(" 切换 Vim 当前路径\n:pwd 显示 Vim 当前路径\n:new 打开一个新的窗口编辑新文件\n:enew 在当前窗口创建新文件\n:vnew 在左右切分的新窗口中编辑新文件\n:tabnew 在新的标签页中编辑新文件")])])],1)],1)],1)],1),n._v(" "),e("h1",[n._v("缓存操作")]),n._v(" "),e("p",[n._v(":ls 查案缓存列表\n:bn 切换到下一个缓存\n:bp 切换到上一个缓存\n:bd 删除缓存\n:b 1 切换到 1 号缓存\n:b abc 切换到文件名为 abc 开头的缓存\n:badd "),e("filename",[n._v(" 将文件添加到缓存列表\n:set hidden 设置隐藏模式（未保存的缓存可以被切换走，或者关闭）\n:set nohidden 关闭隐藏模式（未保存的缓存不能被切换走，或者关闭）\nn CTRL-^ 切换缓存，先输入数字的缓存编号，再按 CTRL + 6")])],1),n._v(" "),e("h1",[n._v("窗口操作")]),n._v(" "),e("p",[n._v(":sp "),e("filename",[n._v(" 上下切分窗口并在新窗口打开文件 filename\n:vs "),e("filename",[n._v(" 左右切分窗口并在新窗口打开文件 filename\nCTRL-W s 上下切分窗口\nCTRL-W v 左右切分窗口\nCTRL-W w 循环切换到下一个窗口\nCTRL-W W 循环切换到上一个窗口\nCTRL-W p 跳到上一个访问过的窗口\nCTRL-W c 关闭当前窗口\nCTRL-W o 关闭其他窗口\nCTRL-W h 跳到左边的窗口\nCTRL-W j 跳到下边的窗口\nCTRL-W k 跳到上边的窗口\nCTRL-W l 跳到右边的窗口\nCTRL-W + 增加当前窗口的行高，前面可以加数字\nCTRL-W - 减少当前窗口的行高，前面可以加数字\nCTRL-W < 减少当前窗口的列宽，前面可以加数字\nCTRL-W > 增加当前窗口的列宽，前面可以加数字\nCTRL-W = 让所有窗口宽高相同\nCTRL-W H 将当前窗口移动到最左边\nCTRL-W J 将当前窗口移动到最下边\nCTRL-W K 将当前窗口移动到最上边\nCTRL-W L 将当前窗口移动到最右边\nCTRL-W x 交换窗口\nCTRL-W f 在新窗口中打开名为光标下文件名的文件\nCTRL-W gf 在新标签页中打开名为光标下文件名的文件\nCTRL-W R 旋转窗口\nCTRL-W T 将当前窗口移到新的标签页中\nCTRL-W P 跳转到预览窗口\nCTRL-W z 关闭预览窗口\nCTRL-W _ 纵向最大化当前窗口\nCTRL-W | 横向最大化当前窗口")])],1)],1),n._v(" "),e("h1",[n._v("标签页")]),n._v(" "),e("p",[n._v(":tabs 显示所有标签页\n:tabe "),e("filename",[n._v(" 在新标签页中打开文件 filename\n:tabn 下一个标签页\n:tabp 上一个标签页\n:tabc 关闭当前标签页\n:tabo 关闭其他标签页\n:tabn n 切换到第 n 个标签页，比如 :tabn 3 切换到第三个标签页\n:tabm n 标签移动\n:tabfirst 切换到第一个标签页\n:tablast 切换到最后一个标签页\n:tab help 在标签页打开帮助\n:tab drop "),e("file",[n._v(" 如果文件已被其他标签页和窗口打开则跳过去，否则新标签打开\n:tab split 在新的标签页中打开当前窗口里的文件\n:tab ball 将缓存中所有文件用标签页打开\n:set showtabline=? 设置为 0 就不显示标签页标签，1 会按需显示，2 会永久显示\nngt 切换到第 n 个标签页，比如 2gt 将会切换到第二个标签页\ngt 下一个标签页\ngT 上一个标签页")])],1)],1),n._v(" "),e("h1",[n._v("书签")]),n._v(" "),n._m(6),n._v(" "),e("h1",[n._v("常用设置")]),n._v(" "),e("p",[n._v(":set nocompatible 设置不兼容原始 vi 模式（必须设置在最开头）\n:set bs=? 设置 BS 键模式，现代编辑器为 :set bs=eol,start,indent\n:set sw=4 设置缩进宽度为 4\n:set ts=4 设置制表符宽度为 4\n:set noet 设置不展开 tab 成空格\n:set et 设置展开 tab 成空格\n:set winaltkeys=no 设置 GVim 下正常捕获 ALT 键\n:set nowrap 关闭自动换行\n:set ttimeout 允许终端按键检测超时（终端下功能键为一串 ESC 开头的扫描码）\n:set ttm=100 设置终端按键检测超时为 100 毫秒\n:set term=? 设置终端类型，比如常见的 xterm\n:set ignorecase 设置搜索是否忽略大小写\n:set smartcase 智能大小写，默认忽略大小写，除非搜索内容里包含大写字母\n:set list 设置显示制表符和换行符\n:set number 设置显示行号，禁止显示行号可以用 :set nonumber\n:set paste 进入粘贴模式（粘贴时禁用缩进等影响格式的东西）\n:set nopaste 结束粘贴模式\n:set spell 允许拼写检查\n:set hlsearch 设置高亮查找\n:set ruler 总是显示光标位置\n:set incsearch 查找输入时动态增量显示查找结果\n:set insertmode Vim 始终处于插入模式下，使用 ctrl-o 临时执行命令\n:set all 列出所有选项设置情况\n:syntax on 允许语法高亮\n:syntax off 禁止语法高亮")]),n._v(" "),e("h1",[n._v("帮助信息")]),n._v(" "),e("p",[n._v(":h tutor 入门文档\n:h quickref 快速帮助\n:h index 查询 Vim 所有键盘命令定义\n:h summary 帮助你更好的使用内置帮助系统\n:h CTRL-H 查询普通模式下 CTRL-H 是干什么的\n:h i"),e("em",[n._v("CTRL-H 查询插入模式下 CTRL-H 是干什么的\n:h i")]),e("Up",[n._v(" 查询插入模式下方向键上是干什么的\n:h pattern.txt 正则表达式帮助\n:h eval 脚本编写帮助\n:h function-list 查看 VimScript 的函数列表\n:h windows.txt 窗口使用帮助\n:h tabpage.txt 标签页使用帮助\n:h +timers 显示对 +timers 特性的帮助\n:h :! 查看如何运行外部命令\n:h tips 查看 Vim 内置的常用技巧文档\n:h set-termcap 查看如何设置按键扫描码\n:viusage NORMAL 模式帮助\n:exusage EX 命令帮助\n:version 显示当前 Vim 的版本号和特性")])],1),n._v(" "),e("h1",[n._v("外部命令")]),n._v(" "),e("p",[n._v(":!ls 运行外部命令 ls，并等待返回\n:r !ls 将外部命令 ls 的输出捕获，并插入到光标后\n:w !sudo tee % sudo 以后保存当前文件\n:call system('ls') 调用 ls 命令，但是不显示返回内容\n:!start notepad Windows 下启动 notepad，最前面可以加 silent\n:sil !start cmd Windows 下当前目录打开 cmd\n:%!prog 运行文字过滤程序，如整理 json 格式 :%!python -m json.tool")]),n._v(" "),e("h1",[n._v("Quickfix 窗口")]),n._v(" "),e("p",[n._v(":copen 打开 quickfix 窗口（查看编译，grep 等信息）\n:copen 10 打开 quickfix 窗口，并且设置高度为 10\n:cclose 关闭 quickfix 窗口\n:cfirst 跳到 quickfix 中第一个错误信息\n:clast 跳到 quickfix 中最后一条错误信息\n:cc [nr] 查看错误 [nr]\n:cnext 跳到 quickfix 中下一个错误信息\n:cprev 跳到 quickfix 中上一个错误信息")]),n._v(" "),e("h1",[n._v("拼写检查")]),n._v(" "),e("p",[n._v(":set spell 打开拼写检查\n:set nospell 关闭拼写检查\n]s 下一处错误拼写的单词\n[s 上一处错误拼写的单词\nzg 加入单词到拼写词表中\nzug 撤销上一次加入的单词\nz= 拼写建议")]),n._v(" "),e("h1",[n._v("代码折叠")]),n._v(" "),e("p",[n._v("za 切换折叠\nzA 递归切换折叠\nzc 折叠光标下代码\nzC 折叠光标下所有代码\nzd 删除光标下折叠\nzD 递归删除所有折叠\nzE 删除所有折叠\nzf 创建代码折叠\nzF 指定行数创建折叠\nzi 切换折叠\nzm 所有代码折叠一层\nzr 所有代码打开一层\nzM 折叠所有代码，设置 foldlevel=0，设置 foldenable\nzR 打开所有代码，设置 foldlevel 为最大值\nzn 折叠 none，重置 foldenable 并打开所有代码\nzN 折叠 normal，重置 foldenable 并恢复所有折叠\nzo 打开一层代码\nzO 打开光标下所有代码折叠")]),n._v(" "),e("h1",[n._v("宏录制")]),n._v(" "),e("p",[n._v("qa 开始录制名字为 a 的宏\nq 结束录制宏\n@a 播放名字为 a 的宏\n@: 播放上一个宏")]),n._v(" "),e("h1",[n._v("其他命令")]),n._v(" "),e("p",[n._v("CTRL-E 向上卷屏\nCTRL-Y 向下卷屏\nCTRL-G 显示正在编辑的文件名，以及大小和位置信息\ng CTRL-G 显示文件的：大小，字符数，单词数和行数，可视模式下也可用\nzz 调整光标所在行到屏幕中央\nzt 调整光标所在行到屏幕上部\nzb 调整光标所在行到屏幕下部\nga 显示光标下字符的 ascii 码或者 unicode 编码\ng8 显示光标下字符的 utf-8 编码字节序\ngi 回到上次进入插入的地方，并切换到插入模式\nK 查询光标下单词的帮助\nZZ 保存文件（如果有改动的话），并关闭窗口\nZQ 不保存文件关闭窗口\nCTRL-PgUp 上个标签页，GVim OK，部分终端软件需设置对应键盘码\nCTRL-PgDown 下个标签页，GVim OK，部分终端软件需设置对应键盘码\nCTRL-R CTRL-W 命令模式下插入光标下单词\nCTRL-INSERT 复制到系统剪贴板（GVIM）\nSHIFT-INSERT 粘贴系统剪贴板的内容（GVIM）\n:set ff=unix 设置换行为 unix\n:set ff=dos 设置换行为 dos\n:set ff? 查看换行设置\n:set nohl 清除搜索高亮\n:set termcap 查看会从终端接收什么以及会发送给终端什么命令\n:set guicursor= 解决 SecureCRT/PenguiNet 中 NeoVim 局部奇怪字符问题\n:set t_RS= t_SH= 解决 SecureCRT/PenguiNet 中 Vim8.0 终端功能奇怪字符\n:set fo+=a 开启文本段的实时自动格式化\n:earlier 15m 回退到 15 分钟前的文件内容\n:.!date 在当前窗口插入时间\n:%!xxd 开始二进制编辑\n:%!xxd -r 保存二进制编辑\n:r !curl -sL {URL} 读取 url 内容添加到光标后\n:g/^\\s*$/d 删除空行\n:g/green/d 删除所有包含 green 的行\n:v/green/d 删除所有不包含 green 的行\n:g/gladiolli/# 搜索单词打印结果，并在结果前加上行号\n:g/ab.*cd.*efg/# 搜索包含 ab,cd 和 efg 的行，打印结果以及行号\n:v/./,/./-j 压缩空行\n:Man bash 在 Vim 中查看 man，先调用 :runtime! ftplugin/man.vim 激活\n/fred|joe 搜索 fred 或者 joe\n/<\\d\\d\\d\\d> 精确搜索四个数字\n/^\\n{3} 搜索连续三个空行")]),n._v(" "),e("h1",[n._v("Plugin - https://github.com/tpope/vim-commentary")]),n._v(" "),e("p",[n._v("gcc 注释当前行\ngc{motion} 注释 {motion} 所标注的区域，比如 gcap 注释整段\ngci{ 注释大括号内的内容\ngc 在 Visual Mode 下面按 gc 注释选中区域\n:7,17Commentary 注释 7 到 17 行")]),n._v(" "),e("h1",[n._v("Plugin - https://github.com/godlygeek/tabular")]),n._v(" "),e("p",[n._v(":Tabularize /, 按逗号对齐\n:Tabularize /= 按等于号对齐\n:Tabularize /| 按竖线对齐\n:Tabularize /|/r0 按竖线靠右对齐")]),n._v(" "),e("h1",[n._v("Plugin - https://github.com/tpope/vim-unimpaired")]),n._v(" "),e("p",[n._v("[space 向上插入空行\n]space 向下插入空行\n[e 替换当前行和上一行\n]e 替换当前行和下一行\n[x XML 编码\n]x XML 解码\n[u URL 编码\n]u URL 解码\n[y C 字符串编码\n]y C 字符串解码\n[q 上一个 quickfix 错误\n]q 下一个 quickfix 错误\n[Q 第一个 quickfix 错误\n]Q 最后一个 quickfix 错误\n[f 切换同目录里上一个文件\n]f 切换同目录里下一个文件\n[os 设置 :set spell\n]os 设置 :set nospell\n=os 设置 :set invspell\n[on 显示行号\n]on 关闭行号\n[ol 显示回车和制表符 :set list\n]ol 不显示回车和制表符 :set nolist\n[b 缓存切换到上一个文件，即 :bp\n]b 缓存切换到下一个文件，即 :bn\n[B 缓存切换到第一个文件，即 :bfirst\n]B 缓存切换到最后一个文件，即 :blast")]),n._v(" "),e("h1",[n._v("Plugin - https://github.com/skywind3000/asyncrun.vim")]),n._v(" "),e("p",[n._v(":AsyncRun ls 异步运行命令 ls 结果输出到 quickfix 使用 :copen 查看\n:AsyncRun -raw ls 异步运行命令 ls 结果不匹配 errorformat")]),n._v(" "),e("h1",[n._v("Plugin - https://github.com/gaving/vim-textobj-argument")]),n._v(" "),e("p",[n._v("cia 改写函数参数\ncaa 改写函数参数（包括逗号分隔）\ndia 删除函数参数\ndaa 删除函数参数（包括逗号分隔）\nvia 选取函数参数\nvaa 选取函数参数（包括逗号分隔）\nyia 复制函数参数\nyaa 复制函数参数（包括逗号分隔）")]),n._v(" "),e("h1",[n._v("网络资源")]),n._v(" "),e("p",[n._v("最新版本 https://github.com/vim/vim\nWindows 最新版 https://github.com/vim/vim-win32-installer/releases\n插件浏览 http://vimawesome.com\nreddit https://www.reddit.com/r/vim/\n正确设置 ALT/BS 键 http://www.skywind.me/blog/archives/2021\n视频教程 http://vimcasts.org/\n中文帮助 http://vimcdoc.sourceforge.net/doc/help.html\n中文版入门到精通 https://github.com/wsdjeg/vim-galore-zh_cn\n五分钟脚本入门 http://andrewscala.com/vimscript/\n脚本精通 http://learnvimscriptthehardway.stevelosh.com/\n中文脚本帮助 vimcdoc.sourceforge.net/doc/eval.html\n十六年使用经验 http://zzapper.co.uk/vimtips.html\n配色方案 http://vimcolors.com/")]),n._v(" "),e("h1",[n._v("TIPS")]),n._v(" "),e("ul",[e("li",[n._v("永远不要用 CTRL-C 代替 "),e("ESC",[n._v(" 完全不同的含义，容易错误中断运行的后台脚本")])],1),n._v(" "),e("li",[n._v("很多人使用 CTRL-[ 代替 "),e("ESC",[n._v("，左手小指 CTRL，右手小指 [ 熟练后很方便")])],1),n._v(" "),e("li",[n._v("某些终端中使用 Vim 8 内嵌终端如看到奇怪字符，使用 :set t_RS= t_SH= 解决")]),n._v(" "),e("li",[n._v("某些终端中使用 NeoVim 如看到奇怪字符，使用 :set guicursor= 解决")]),n._v(" "),e("li",[n._v('多使用 ciw, ci[, ci", ci( 以及 diw, di[, di", di( 命令来快速改写/删除文本')]),n._v(" "),e("li",[n._v("SHIFT 相当于移动加速键， w b e 移动光标很慢，但是 W B E 走的很快")]),n._v(" "),e("li",[n._v("自己要善于总结新技巧，比如移动到行首非空字符时用 0w 命令比 ^ 命令更容易输入")]),n._v(" "),e("li",[n._v("在空白行使用 dip 命令可以删除所有临近的空白行，viw 可以选择连续空白")]),n._v(" "),e("li",[n._v("缩进时使用 >8j >} "),e("ap",[n._v("ap =i} == 会方便很多")])],1),n._v(" "),e("li",[n._v("插入模式下，当你发现一个单词写错了，应该多用 CTRL-W 这比 "),e("BackSpace",[n._v(" 快")])],1),n._v(" "),e("li",[n._v("y d c 命令可以很好结合 f t 和 /X 比如 dt) 和 y/end"),e("cr")],1),n._v(" "),e("li",[n._v('c d x 命令会自动填充寄存器 "1 到 "9 , y 命令会自动填充 "0 寄存器')]),n._v(" "),e("li",[n._v("用 v 命令选择文本时，可以用 o 掉头选择，有时很有用")]),n._v(" "),e("li",[n._v("写文章时，可以写一段代码块，然后选中后执行 :!python 代码块就会被替换成结果")]),n._v(" "),e("li",[n._v("搜索后经常使用 :nohl 来消除高亮，使用很频繁，可以 map 到 "),e("BackSpace",[n._v(" 上")])],1),n._v(" "),e("li",[n._v("搜索时可以用 CTRL-R CTRL-W 插入光标下的单词，命令模式也能这么用")]),n._v(" "),e("li",[n._v("映射按键时，应该默认使用 noremap ，只有特别需要的时候使用 map")]),n._v(" "),e("li",[n._v("当你觉得做某事很低效时，你应该停下来，u u u u 然后思考正确的高效方式来完成")]),n._v(" "),e("li",[n._v("用 y 复制文本后，命令模式中 CTRL-R 然后按双引号 0 可以插入之前复制内容")]),n._v(" "),e("li",[n._v("Windows 下的 GVim 可以设置 set rop=type:directx,renmode:5 增强显示")])]),n._v(" "),e("h1",[n._v("References")]),n._v(" "),e("p",[n._v("https://github.com/groenewege/vimrc/blob/master/vim_cheat_sheet.txt\nhttp://blog.g-design.net/post/4789778607/vim-cheat-sheet\nhttp://www.keyxl.com/aaa8263/290/VIM-keyboard-shortcuts.htm\nhttp://jmcpherson.org/editing.html\nhttp://www.fprintf.net/vimCheatSheet.html\nhttp://www.ouyaoxiazai.com/article/24/654.html\nhttp://bbs.it-home.org/thread-80794-1-1.html\nhttp://www.lpfrx.com/wp-content/uploads/2008/09/vi.jpg\nhttp://michael.peopleofhonoronly.com/vim/\nhttps://github.com/hobbestigrou/vimtips-fortune/blob/master/fortunes/vimtips\nhttps://github.com/glts/vim-cottidie/blob/master/autoload/cottidie/tips")]),n._v(" "),e("h1",[n._v("vim: set ts=4 sw=4 tw=0 noet noautoindent fdm=manual :")])])},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("blockquote",[t("p",[this._v("VIM CHEATSHEET (中文速查表) - by skywind (created on 2017/10/12)\nVersion: 42, Last Modified: 2018/07/19 19:04\nhttps://github.com/skywind3000/awesome-cheatsheets")])])},function(){var n=this.$createElement,t=this._self._c||n;return t("ul",[t("li",[t("pre",[t("code",[this._v("              移动到下一行首个非空字符（同回车键）\n")])])])])},function(){var n=this.$createElement,t=this._self._c||n;return t("pre",[t("code",[this._v("              移动到上一行首个非空字符\n")])])},function(){var n=this.$createElement,t=this._self._c||n;return t("blockquote",[t("blockquote",[t("pre",[t("code",[this._v("             增加缩进\n")])]),this._v(" "),t("p",[this._v("== 自动缩进\nCTRL-A 增加数字\nCTRL-X 减少数字")])])])},function(){var n=this.$createElement,t=this._self._c||n;return t("ul",[t("li",[t("pre",[t("code",[this._v("              向前搜索光标下的单词\n")])])])])},function(){var n=this.$createElement,t=this._self._c||n;return t("pre",[t("code",[this._v("              增加缩进\n")])])},function(){var n=this.$createElement,t=this._self._c||n;return t("p",[this._v(":marks 显示所有书签\nma 保存当前位置到书签 a ，书签名可以用 a-z（作用范围为文件内部）, A-Z（作用范围为所有文件） 26*2 个字母\n'a 跳转到书签 a 所在的行\n"),t("code",[this._v("a 跳转到书签 a所在位置")]),this._v(". 跳转到上一次编辑的行\n'A 跳转到全文书签 A\n[' 跳转到上一个书签\n]' 跳转到下一个书签\n'< 跳到上次可视模式选择区域的开始\n'> 跳到上次可视模式选择区域的结束")])}]},v=e("VU/8")(null,i,!1,null,null,null);t.default=v.exports}});